import { NextRequest, NextResponse } from "next/server";

const BACKEND_URL = "http://localhost:3002";

// POST - –ø—Ä–æ–∫—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ backend –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ
export async function POST(request: NextRequest) {
  console.log("üì§ POST /api/v1/upload/photo - –ü—Ä–æ–∫—Å—É–≤–∞–Ω–Ω—è –¥–æ backend");

  try {
    const authHeader = request.headers.get("authorization");

    if (!authHeader || !authHeader.startsWith("Bearer ")) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
    }

    // –û—Ç—Ä–∏–º—É—î–º–æ FormData –∑ –∑–∞–ø–∏—Ç—É
    const formData = await request.formData();

    // –ü—Ä–æ–∫—Å—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ backend
    const backendUrl = `${BACKEND_URL}/api/v1/upload/photo`;

    const response = await fetch(backendUrl, {
      method: "POST",
      headers: {
        Authorization: authHeader,
      },
      body: formData,
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error(
        `‚ùå POST /api/v1/upload/photo - Backend error: ${response.status}`,
        errorText
      );
      return NextResponse.json(
        { error: errorText || "Backend upload failed" },
        { status: response.status }
      );
    }

    const data = await response.json();

    console.log(
      `‚úÖ POST /api/v1/upload/photo - –§–æ—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —á–µ—Ä–µ–∑ backend`
    );

    return NextResponse.json(data, {
      status: response.status,
    });
  } catch (error) {
    console.error("‚ùå POST /api/v1/upload/photo - –ü–æ–º–∏–ª–∫–∞:", error);
    return NextResponse.json(
      { error: "Failed to upload photo to backend" },
      { status: 500 }
    );
  }
}
