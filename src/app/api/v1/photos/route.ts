import { NextRequest, NextResponse } from "next/server";

const BACKEND_URL = "https://rekogrinikfrontbeck-production-a699.up.railway.app";

// GET - –ø—Ä–æ–∫—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ backend –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö —Ñ–æ—Ç–æ
export async function GET(request: NextRequest) {
  console.log("üîç GET /api/v1/photos - –ü—Ä–æ–∫—Å—É–≤–∞–Ω–Ω—è –¥–æ backend");

  try {
    const authHeader = request.headers.get("authorization");

    if (!authHeader || !authHeader.startsWith("Bearer ")) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
    }

    const backendUrl = `${BACKEND_URL}/api/v1/photos`;

    const response = await fetch(backendUrl, {
      method: "GET",
      headers: {
        Authorization: authHeader,
        "Content-Type": "application/json",
      },
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error(
        `‚ùå GET /api/v1/photos - Backend error: ${response.status}`,
        errorText
      );
      return NextResponse.json(
        { error: errorText || "Backend fetch failed" },
        { status: response.status }
      );
    }

    const data = await response.json();

    console.log(`‚úÖ GET /api/v1/photos - –û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ –∑ backend`);

    return NextResponse.json(data, {
      status: response.status,
    });
  } catch (error) {
    console.error("‚ùå GET /api/v1/photos - –ü–æ–º–∏–ª–∫–∞:", error);
    return NextResponse.json(
      { error: "Failed to fetch photos from backend" },
      { status: 500 }
    );
  }
}

// DELETE - –ø—Ä–æ–∫—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ backend –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ
export async function DELETE(request: NextRequest) {
  console.log("üóëÔ∏è DELETE /api/v1/photos - –ü—Ä–æ–∫—Å—É–≤–∞–Ω–Ω—è –¥–æ backend");

  try {
    const authHeader = request.headers.get("authorization");

    if (!authHeader || !authHeader.startsWith("Bearer ")) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
    }

    const { searchParams } = new URL(request.url);
    const photoId = searchParams.get("id");

    if (!photoId) {
      return NextResponse.json(
        { error: "Photo ID is required" },
        { status: 400 }
      );
    }

    const backendUrl = `${BACKEND_URL}/api/v1/photos?id=${photoId}`;

    const response = await fetch(backendUrl, {
      method: "DELETE",
      headers: {
        Authorization: authHeader,
        "Content-Type": "application/json",
      },
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error(
        `‚ùå DELETE /api/v1/photos - Backend error: ${response.status}`,
        errorText
      );
      return NextResponse.json(
        { error: errorText || "Backend deletion failed" },
        { status: response.status }
      );
    }

    const data = await response.json();

    console.log(`‚úÖ DELETE /api/v1/photos - –§–æ—Ç–æ ${photoId} –≤–∏–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ backend`);

    return NextResponse.json(data, {
      status: response.status,
    });
  } catch (error) {
    console.error("‚ùå DELETE /api/v1/photos - –ü–æ–º–∏–ª–∫–∞:", error);
    return NextResponse.json(
      { error: "Failed to delete photo from backend" },
      { status: 500 }
    );
  }
}
