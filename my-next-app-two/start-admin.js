#!/usr/bin/env node

const { spawn } = require("child_process");
const path = require("path");

// –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ä—Ç –∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
const port = process.argv[2] || "3000";

console.log(`üöÄ –ó–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ –Ω–∞ –ø–æ—Ä—Ç—É ${port}...`);
console.log(`üìã –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞: http://localhost:${port}`);
console.log(`üîß –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C`);

// –ó–∞–ø—É—Å–∫–∞—î–º–æ Next.js —Å–µ—Ä–≤–µ—Ä
const child = spawn("pnpm", ["dev", "--port", port], {
  stdio: "inherit",
  shell: true,
  cwd: __dirname,
});

// –û–±—Ä–æ–±–∫–∞ —Å–∏–≥–Ω–∞–ª—ñ–≤ –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
process.on("SIGINT", () => {
  console.log("\nüõë –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...");
  child.kill("SIGINT");
  process.exit(0);
});

process.on("SIGTERM", () => {
  console.log("\nüõë –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...");
  child.kill("SIGTERM");
  process.exit(0);
});

child.on("error", (error) => {
  console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:", error);
  process.exit(1);
});

child.on("exit", (code) => {
  if (code !== 0) {
    console.error(`‚ùå –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –∑ –∫–æ–¥–æ–º ${code}`);
    process.exit(code);
  }
});

