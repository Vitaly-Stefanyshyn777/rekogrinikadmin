const axios = require("axios");

const API_BASE_URL = process.env.API_BASE_URL || "http://localhost:3000/api/v1";

async function createAdmin() {
  const email = process.argv[2];
  const password = process.argv[3];

  if (!email || !password) {
    console.log("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: node create-admin.js <email> <password>");
    console.log("–ü—Ä–∏–∫–ª–∞–¥: node create-admin.js admin@example.com password123");
    process.exit(1);
  }

  try {
    console.log("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...");

    const response = await axios.post(`${API_BASE_URL}/auth/register`, {
      email,
      password,
      name: "Admin",
    });

    console.log("‚úÖ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!");
    console.log(`üìß Email: ${email}`);
    console.log("üîë –¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ /login");
  } catch (error) {
    if (error.response) {
      console.error(
        "‚ùå –ü–æ–º–∏–ª–∫–∞:",
        error.response.data.message || "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞"
      );
    } else {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º");
    }
    process.exit(1);
  }
}

createAdmin();
